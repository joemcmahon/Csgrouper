

*** How to run Csgrouper?

Once installed Csgrouper can be started with the default piece by entering 

	~/Csgrouper/run/csgrouper from a terminal.

This command is equivalent to :

	~/Csgrouper/lib/csgrouper.pl ~/Csgrouper/run/default.xml

It can also take an argument which is the name of a part file as in:

	~/Csgrouper/run/csgrouper ~/Csgrouper/part/xpace-flute.xml

(in the original package xpace-flute.xml is a copy of default.xml).



*** How to produce audio output?

Once a set of sequences is properly defined it can pass the evaluation stage 
(button "Eval" from the "Sequences" tab or from the "CSD" tab). If this evaluation 
completes, it's ready to be written (button "Rewrite" from the "CSD" tab) 
and then only it can be heard through the button "Play" from the "CSD" tab.

When producing output some sequences can be easily commented out but this must be 
done from the "CSD" tab by mentionning their coma-separated ids list into the proper 
field instead of deselecting them from the "Sequences" tab, because this last action 
would modify the structure of the part and its resulting output. 



*** In case of problem:

In the beggining, it's easy to replace a valid setup by a setup that will not 
complete evaluation. In this case one can come back to the default part 
provided with Csgrouper, that is located in folder "part" under the name 
"xpace-flute.xml". Just copy that file onto Csgrouper/run/default.xml and relaunch
the program to come back to the valid default piece.

If Csgrouper refuses to play a score in spite of proper Csound setup, it can
be due to the mere absence of an empty folder Csgrouper/run/bkp where Csound 
runtime process happens (see INSTALL.txt for more info on package files).



*** How to run in DEBUG mode?

Csgrouper outputs a lot of description output on the terminal, prefixed by 
' *** DESCR', but it can output still much more when running in debug mode.

One can do this through various means, either for a particular subroutine, 
for a group of them or for all.

a) Debug All:

From the "Series" tab, type:

	~$Csgrouper::DEBFLAG = 1 

into the "cmd line" field and press button "Send". 
All commands prefixed with a '~' are Perl oneliners that can access the modules' globals. 
(Command without prefixe are Csgrouper function calls mainly useful for csg_Sets.pm).

	~$Csgrouper::DEBFLAG = 0 (to suppress debug output).

b) Debug some subroutines, type:

	~$Csgrouper::DEBSUBS = "Csgrouper::struct_ctl Csgrouper::comp_tracks"
	
and only these subs (written with module name prefixe) will be debugged.

c) Debug one subroutine all the time:

	correct the sub's code by setting $DEBFLAG = 1 at the beggining.

EOF