

*** News / TODOs / Questions / Problems / Recent Changes / Bugs (see at EOF) 

 - Some minor rewording and editing by Joe McMahon (mcmahon@cpan.org).

 - 120627: Manual pages still need to be written, but Csgrouper should now
be usable by those who aren't Perl programmers.
 
 - 120627: The fact that my class hierarchy is not quite hierarchical makes me 
 wonder about the appropriateness of using Moose, and even of trying to follow 
 an OO model in this project. Moose has the drawback of requiring a lot of other 
 Cpan modules to be installed. What's your opinion on this?

 - 120627: We're now at version 2.0.2.

 - 120627: 'Parts' have been renamed to 'projects' since a musical part is 
not exactly the same as the whole of a musical score as it is in csgrouper.
Various places updated to reflect this.

 - 120627: The reload() bug is now fixed (see the end of this page).

 - 120625: The ins_parnum() bug is now fixed (see the end of this page).

 - 120625: ins_load (instrument loading) improved.

 - 120625: Redundant subroutines removed.

 - 120620:  Tk Balloon help added. More ballon help will be added incrementally.

 - 120317: Documentation fixes will be noted separately from code changes.

*** Bugs

*** *** Tk Bugs

The Tk::Notebook -Podtext problem: the Podtext parameter disturbs proper Tk
display here. See : my $Man_top_tw = $Tabs{'man'}->Scrolled. Perlmonks 120323
fix: use Tk::option (actually Tk::Cmdline) to override default color. The
Tk::Text control chars bug: see our workaround from Perlmonks.org.

The Tk::Pod::Text bug: overwrites the main window title with the head1 entry.

The Tk::Table : long strings are not displayed (is it a bug?).

The Tk::TextEntry : validatecommand is called on widget creation (is it a bug?).



*** *** Csgrouper bugs:

- 120626 : The reload() bug.

 Description

The reload() command was inverting sequence selection.

 Solution

The -validatecommand option in Tk text entries is run at creation time, thus our
rows are deselected. We had met this problem already and needed only to reuse
the same $STARTEXEC fake init time trick.

- 120625 : The ins_parnum() bug.

 Description

As soon as a parameter was missing from the instrument text ins_parnum was not
numbering parameters correctly anymore, in consequence parameters had to be
verified and even listed with unuseful variables to ensure their taking into
account. Unfortunately this situation arises normally for the duration param p3
and sometimes also for params prepared but not exploited yet.

 Solution

ins_parnum has been written better and now accepts (and even warns for) missing
params, no need to list them specially in the beggining of instrument text
anymore, no error in consequent parameter numbering. The only param that can be
ommited without warning is the last one for any instrument, in that case Csound
will complain about an incorrect param count.

111120 : The struct_ctl() section bug.

111018 : The sequence deletion bug.

 Description

While deleting multiple sequences but after objects have been created and
struct_ctl has been run: lots of sequences but not all the possible sequences
are created (stops at 571 instead of 576 why?) and this process ends up with
this message: (in validation command executed by entry) Tk::Error: Can't call
method "set_ready" without a package or object reference at
~/Csgrouper/lib/csgrouper.pl line 5378. [\&main::__ANON__] (in validation
command executed by entry) When deleting the same sequences before struct_ctl,
the job is done but ends like:

Tk::Error: Can't call method "set_ready" without a package or object reference
at ~/Csgrouper/lib/csgrouper.pl line 5388. \\&main::__ANON__ (in validation
command executed by entry)

struct_ctl seems to be creating unnecessary sequences as Tkrow entries, when I
delete my 4 sequences and keep 1 I only delete 4 of 576 = 572...

 Solution

I had the following line in the begining of the struct_ctl() loop:

	$self->sequences->{$tpref."_id"}//= "";

so the object was created.

*** *** Perl-related bugs:

 - UTF-8 in instrument fields: despite code to eliminate it, instrument fields
can record bad UTF-8 characters (e.g., from Emacs-like reflexes). If a .csg 
project refuses to load, it may be because an unwanted multibyte character
has accidentally been inserted; this will cause XML::Simple to die. Currently,
the solution is to find and delete the bad character using nano or vi (it will
appear with a leading ^).

EOF
